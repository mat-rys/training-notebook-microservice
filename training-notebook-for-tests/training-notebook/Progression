
17.07
*Creating a project and setting up all the necessary files.
*Establishing connections between services and their respective databases.
*Implementing well-defined entities along with repositories and service classes for them.
*Creating a simple controller for the user account service.
*Configuring all project components with the API in the config server.
*The API gateway acts as an intermediary between services and users on a different port.


18.07:
Improved the notes service

19.07:
Deployed Keycloak using Docker on port 8181, enabling user registration and authentication.
Configured the services to interact with Keycloak for user management.
Integrated Zipkin using Docker on port 9411, enabling distributed tracing and service monitoring.

20.07:
GRAFANA
Deployed Grafana using Docker on port 3000.
Connected Grafana to the Zipkin service to visualize distributed tracing data.
Created comprehensive dashboards and visualizations in Grafana to monitor and analyze application performance.

SWAGGER
http://localhost:8222/webjars/swagger-ui/4.15.5/index.html  DOCUMENTATION
\\\\
http://localhost:8090/account/v3/api-docs
http://localhost:8070/notes/v3/api-docs
http://localhost:8222/v3/api-docs
\\\\
On port 8222, the API gateway has implemented Swagger, which allows you to access and interact with the API documentation and make requests to the database.

WORK STILL IN PROGRESS
Currently, no data collection components or services on ports 8090 and 8070 are secured due to a PostgreSQL configuration issue with Keycloak.
In this version, the security measures are open, and there is no authentication yet, as I mentioned before. I am currently working on implementing it.
I cannot fully develop the services without having a logged-in account, and I need to integrate them with Keycloak.

21.07
SECURITY
I have configured security in the project, allowing services to retrieve the username of the logged-in user through Keycloak.
I used token generation in Keycloak to secure the services and added roles.
However, I still need to add the required roles to the endpoints.
Overall, it's significant progress as I can now associate notes in the database with the user ID from Keycloak.


